
GDAL_ROOT	=	..

XTRAOBJ =	$(SETARGV)

EXTRAFLAGS =	-I..\frmts\vrt -I..\ogr\ogrsf_frmts\geojson\libjson -I..\ogr\ogrsf_frmts\geojson -I..\ogr\ogrsf_frmts\generic $(GEOS_CFLAGS) $(PROJ_INCLUDE)

!INCLUDE ..\nmake.opt

LIBS	=	$(GDALLIB)

!IFDEF INCLUDE_OGR_FRMTS
OGR_PROGRAMS =	gdal_contour.exe gdaltindex.exe gdal_rasterize.exe \
		gdal_grid.exe ogrinfo.exe ogr2ogr.exe ogrtindex.exe ogrlineref.exe\
		gdalbuildvrt.exe testepsg.exe
!ENDIF

!IFDEF INCLUDE_GNM_FRMTS
GNM_PROGRAMS =	gnmmanage.exe gnmanalyse.exe
!ENDIF


default:	gdal_translate.exe gdalinfo.exe gdaladdo.exe gdalwarp.exe \
		nearblack.exe gdalmanage.exe gdalenhance.exe gdaltransform.exe\
		gdaldem.exe gdallocationinfo.exe gdalsrsinfo.exe gdalmdiminfo.exe \
		gdalmdimtranslate.exe gdal_viewshed.exe gdal_create.exe $(OGR_PROGRAMS) $(GNM_PROGRAMS)

all:	default multireadtest.exe \
			dumpoverviews.exe gdalwarpsimple.exe gdalflattenmask.exe \
			gdaltorture.exe gdal2ogr.exe test_ogrsf.exe
OBJ = commonutils.obj gdalinfo_lib.obj gdal_translate_lib.obj gdalwarp_lib.obj ogr2ogr_lib.obj \
	gdaldem_lib.obj nearblack_lib.obj gdal_grid_lib.obj gdal_rasterize_lib.obj gdalbuildvrt_lib.obj \
	gdalmdiminfo_lib.obj gdalmdimtranslate_lib.obj

appslib: $(OBJ)

gdalinfo.exe:	gdalinfo_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalinfo_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalmdiminfo.exe:	gdalmdiminfo_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalmdiminfo_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalmdimtranslate.exe:	gdalmdimtranslate_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalmdimtranslate_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_translate.exe:	gdal_translate_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_translate_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdaladdo.exe:	gdaladdo.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdaladdo.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalwarpsimple.exe:	gdalwarpsimple.c $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalwarpsimple.c $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdaltransform.exe:	gdaltransform.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdaltransform.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdallocationinfo.exe:	gdallocationinfo.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdallocationinfo.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalsrsinfo.exe:	gdalsrsinfo.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalsrsinfo.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalwarp.exe:	gdalwarp_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalwarp_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_contour.exe:	gdal_contour.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_contour.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_viewshed.exe:	gdal_viewshed.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_viewshed.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_create.exe:	gdal_create.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_create.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

nearblack.exe:	nearblack_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) nearblack_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalenhance.exe:	gdalenhance.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalenhance.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdaldem.exe:	gdaldem_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdaldem_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_grid.exe:	gdal_grid_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_grid_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalmanage.exe:	gdalmanage.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalmanage.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdaltindex.exe:	gdaltindex.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdaltindex.cpp \
		$(XTRAOBJ) $(LIBS) /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal_rasterize.exe:	gdal_rasterize_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal_rasterize_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

multireadtest.exe:	multireadtest.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) multireadtest.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalasyncread.exe:	gdalasyncread.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalasyncread.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

testreprojmulti.exe:	testreprojmulti.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) testreprojmulti.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

ogr2ogr.exe:	ogr2ogr_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) ogr2ogr_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

ogrinfo.exe:	ogrinfo.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) ogrinfo.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

ogrtindex.exe:	ogrtindex.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) ogrtindex.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

ogrlineref.exe:	ogrlineref.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) ogrlineref.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

testepsg.exe:	testepsg.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) testepsg.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

test_ogrsf.exe:	test_ogrsf.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) test_ogrsf.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalbuildvrt.exe:	gdalbuildvrt_bin.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalbuildvrt_bin.cpp $(XTRAOBJ) $(LIBS) \
		/Fe$@ /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

dumpoverviews.exe:	dumpoverviews.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) dumpoverviews.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdalflattenmask.exe:	gdalflattenmask.c $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdalflattenmask.c $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdaltorture.exe:	gdaltorture.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdaltorture.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gdal2ogr.exe:	gdal2ogr.c $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gdal2ogr.c $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gnmmanage.exe:	gnmmanage.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gnmmanage.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

gnmanalyse.exe:	gnmanalyse.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) gnmanalyse.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

clean:
	-del *.obj
	-del *.exe
	-del *.pdb
	-del *.ilk
	-del *.lib
	-del *.manifest
	-del *.exp

install:	default
	copy *.exe $(BINDIR)
