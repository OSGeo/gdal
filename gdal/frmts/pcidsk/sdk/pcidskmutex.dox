/******************************************************************************
 *
 * Purpose:  Documentation for the PCIDSKMutex class.
 * 
 ******************************************************************************
 * Copyright (c) 2009
 * PCI Geomatics, 50 West Wilmot Street, Richmond Hill, Ont, Canada
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ****************************************************************************/

/** 

******************************************************************************
\class PCIDSK::Mutex

\brief Mutex interface class.

The Mutex class is the standard interface for mutexes in the PCIDSK library.
A mutex provides critical section locking in multi-threaded applications.  
Applications may provide custom mutex implementations by passing their own
CreateMutex() implementation in PCIDSK::PCIDSKInterfaces instead of the
default one provided by the library (CreateDefaultMutex()).  The library 
will create mutexes using the PCIDSK::PCIDSKInterfaces::CreateMutex() function.

Note that mutexes are created in the unlocked condition.

Mutexes may be destroyed with delete when no longer required.

******************************************************************************
\fn int PCIDSK::Mutex::Acquire()
  
\brief Acquire the mutex.

Note that control will block in Acquire() until such time as the mutex can
be acquired for this thread.  

@return TRUE on success.

******************************************************************************
\fn int PCIDSK::Mutex::Release()
  
\brief Release the mutex.

Release this mutex so that it may be acquired by another thread. 

@return TRUE on success.


*/

