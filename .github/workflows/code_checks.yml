name: Code Checks

on:
    push:
        paths-ignore:
            - 'doc/**'
        branches-ignore:
            - 'backport**'
    pull_request:
        paths-ignore:
            - 'doc/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  cppcheck_2004:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Requirements
        run: |
          sudo apt update
          sudo apt install -y cppcheck libsqlite3-dev ccache sqlite3 libproj-dev cmake

      - name: Run cmake
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Run cppcheck test
        run: |
          cd build
          ../scripts/cppcheck.sh

  code_quality_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Detect tabulations
        run: ./scripts/detect_tabulations.sh

      - name: Detect printf
        run: ./scripts/detect_printf.sh

      - name: Detect self assignments
        run: ./scripts/detect_self_assignment.sh

      - name: Detect suspicious char digit zero
        run: ./scripts/detect_suspicious_char_digit_zero.sh

      - name: Shellcheck
        run: shellcheck -e SC2086,SC2046,SC2164,SC2054 $(find . -name '*.sh' -a -not -name ltmain.sh -a -not -wholename "./autotest/*" -a -not -wholename "./.github/*")

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v3.0.0

  doxygen:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Requirements
        run: |
            sudo apt update
            sudo apt install doxygen texlive-latex-base

      - name: Run doxygen
        run: |
            cd doc
            make .doxygen_up_to_date >log.txt 2>&1
            if grep -i warning log.txt | grep -v -e russian -e brazilian; then echo "Doxygen warnings found" && cat log.txt && /bin/false; else echo "No Doxygen warnings found"; fi

  other_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Requirements
        run: |
            sudo apt install python3-pip wget
            sudo pip3 install jsonschema

      - name: Check json files
        run: |
            wget https://raw.githubusercontent.com/rouault/zenodo_json_schema/master/zenodo-json-schema.json
            jsonschema -i .zenodo.json zenodo-json-schema.json
