name: Ubuntu 20.04 build

on: [push, pull_request]

jobs:

  ubuntu_20_04_build:
    runs-on: ubuntu-latest
    #if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache deps
        uses: actions/cache@v2
        id: cache-deps
        with:
          path: /tmp/docker
          key: ${{ runner.os }}-cache-ubuntu-20.04-deps-${{ hashFiles('.github/workflows/ubuntu_20.04/build-deps.sh') }}

      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
            docker build -f .github/workflows/ubuntu_20.04/Dockerfile.deps -t gdal-deps-ubuntu-20.04 .github/workflows/ubuntu_20.04
            mkdir /tmp/docker
            docker image save -o /tmp/docker/gdal-deps-ubuntu-20.04.tar gdal-deps-ubuntu-20.04

      - name: Restore dependencies
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: |
            docker image load -i /tmp/docker/gdal-deps-ubuntu-20.04.tar
            docker images

      - name: Build
        run: docker build -f .github/workflows/ubuntu_20.04/Dockerfile -t gdal .

      - name: Run pytest
        # --security-opt seccomp=unconfined, so that the userfaulfd syscall is available
        run: docker run --security-opt seccomp=unconfined --rm gdal sh -c "cd /build/autotest && pip3 install -U -r requirements.txt && pytest"

      - name: Run SWIG C# tests
        run: docker run --rm gdal sh -c "cd /build/gdal/swig/csharp && make && make && make test"