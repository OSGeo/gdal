environment:
  matrix:
  - platform: x64
    VSCOMNTOOLS: $(VS140COMNTOOLS)
    SDK: release-1900-x64
    MSVC_VER: 1900
# Disabled to be faster
#  - platform: x64
#    VSCOMNTOOLS: $(VS120COMNTOOLS)
#    SDK: release-1800-x64
#    MSVC_VER: 1800
  - platform: x86
    VSCOMNTOOLS: $(VS120COMNTOOLS)
    SDK: release-1800
    MSVC_VER: 1800

shallow_clone: true

install:
- if "%platform%" == "x86" SET PATH=c:\python27;%PATH%
- if "%platform%" == "x64" SET PATH=c:\Python27-x64;%PATH%
- if "%platform%" == "x86" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat"
- if "%platform%" == "x64" "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
- if "%platform%" == "x64" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64
- if "%platform%" == "x64" set WIN64_ARG="WIN64=YES"
- set SDK_ZIP=%SDK%-dev.zip
- set SDK_URL=http://download.gisinternals.com/sdk/downloads/%SDK_ZIP%
- echo "%SDK_ZIP%"
- echo "%SDK_URL%"
- mkdir sdk
- cd sdk
- appveyor DownloadFile "%SDK_URL%"
- 7z x "%SDK_ZIP%" > nul
- cd ..
- set SDK_PREFIX=%CD%\sdk\%SDK%
- set SDK_INC=%CD%\sdk\%SDK%\include
- set SDK_LIB=%CD%\sdk\%SDK%\lib
- set SDK_BIN=%CD%\sdk\%SDK%\bin
#- copy %SDK_INC%\hdf4\*.h %SDK_INC%
#- ps: Start-FileDownload http://download.osgeo.org/proj/proj-4.9.1.tar.gz
#- 7z x proj-4.9.1.tar.gz
#- 7z x proj-4.9.1.tar
#- cd proj-4.9.1
#- nmake /f makefile.vc
#- nmake /f makefile.vc install-all
#- cd ..
- cd gdal
- echo GEOS_CFLAGS=-I$(SDK_INC) -DHAVE_GEOS > nmake.local
- echo GEOS_LIB=$(SDK_LIB)\geos_c.lib >> nmake.local
- echo PG_INC_DIR = $(SDK_INC) >> nmake.local
- echo PG_LIB = $(SDK_LIB)\libpqdll.lib wsock32.lib >> nmake.local
- echo CURL_DIR=bla >> nmake.local
- echo CURL_INC = -I$(SDK_INC) >> nmake.local
- echo CURL_LIB = $(SDK_LIB)\libcurl_imp.lib wsock32.lib wldap32.lib winmm.lib >> nmake.local
- echo SQLITE_INC=-I$(SDK_INC) -DHAVE_SPATIALITE -DSPATIALITE_AMALGAMATION >> nmake.local
- echo SQLITE_LIB=$(SDK_LIB)\spatialite_i.lib $(SDK_LIB)\sqlite3_i.lib >> nmake.local
- echo KMLSUPEROVERLAY_SUPPORTED = YES >> nmake.local
- echo MINIZIP_INCLUDE = -I$(SDK_INC) >> nmake.local
- echo MINIZIP_LIBRARY = $(SDK_LIB)\minizip.lib >> nmake.local
- echo XERCES_DIR=bla >> nmake.local
- echo XERCES_INCLUDE=-I$(SDK_INC) -I$(SDK_INC)\xercesc >> nmake.local
- echo XERCES_LIB=$(SDK_LIB)\xerces-c_3.lib >> nmake.local
- echo ILI_ENABLED = YES >> nmake.local
- echo EXPAT_DIR=bla >> nmake.local
- echo EXPAT_INCLUDE=-I$(SDK_INC) >> nmake.local
- echo EXPAT_LIB=$(SDK_LIB)\expat.lib >> nmake.local
- nmake /f makefile.vc MSVC_VER=%MSVC_VER% %WIN64_ARG% USER_DEFS=/WX
- cd apps
- nmake /f makefile.vc test_ogrsf.exe MSVC_VER=%MSVC_VER% %WIN64_ARG% USER_DEFS=/WX
- cd ..
- cd swig\python
- python setup.py build
- python setup.py install
- cd ..\..
- cd ..\autotest\cpp
- nmake /f makefile.vc MSVC_VER=%MSVC_VER% %WIN64_ARG%
- cd ..\..


build_script:
  - echo build_script

test_script:
  - echo test_script
  - set SDK_PREFIX=%CD%\sdk\%SDK%
  - set SDK_BIN=%CD%\sdk\%SDK%\bin
  - SET PATH=%CD%\gdal;%CD%\gdal\apps;%SDK_BIN%;%PATH%
  - SET GDAL_DATA=%CD%\gdal\data
  - SET PROJ_LIB=%SDK_BIN%\proj\SHARE
  - SET CPL_DEBUG=ON
  - cd autotest
  - cd gdriver
  - python wcs.py

deploy: off

